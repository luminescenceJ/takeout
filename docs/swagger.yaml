basePath: /
definitions:
  common.PageResult:
    properties:
      records:
        description: 当前页数据集合
      total:
        description: 总记录数
        type: integer
    type: object
  common.Result:
    properties:
      code:
        type: integer
      data: { }
      msg:
        type: string
    type: object
  request.CategoryDTO:
    properties:
      id:
        type: integer
      name:
        type: string
      sort:
        type: string
      type:
        type: string
    type: object
  request.EmployeeDTO:
    properties:
      id:
        description: 员工id
        type: integer
      idNumber:
        description: 身份证
        type: string
      name:
        description: 姓名
        type: string
      phone:
        description: 手机号
        type: string
      sex:
        description: 性别
        type: string
      username:
        description: 用户名
        type: string
    required:
      - idNumber
      - name
      - phone
      - sex
      - username
    type: object
  request.EmployeeEditPassword:
    properties:
      empId:
        type: integer
      newPassword:
        type: string
      oldPassword:
        type: string
    required:
      - newPassword
      - oldPassword
    type: object
  request.EmployeeLogin:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: admin
        type: string
    required:
      - password
      - username
    type: object
  response.EmployeeLogin:
    properties:
      id:
        type: integer
      name:
        type: string
      token:
        type: string
      userName:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /admin/category:
    delete:
      parameters:
        - description: 分类id
          in: query
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/common.Result'
        "500":
          description: DeleteById failed
          schema:
            $ref: '#/definitions/common.Result'
      security:
        - JWTAuth: [ ]
      tags:
        - Category
    post:
      parameters:
        - description: 新增分类信息
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/request.CategoryDTO'
      produces:
        - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/common.Result'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/common.Result'
      security:
        - JWTAuth: [ ]
      tags:
        - Category
    put:
      parameters:
        - description: 编辑分类的内容
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/request.CategoryDTO'
      produces:
        - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/common.Result'
        "400":
          description: invalid params failed
          schema:
            $ref: '#/definitions/common.Result'
        "500":
          description: deleteById failed
          schema:
            $ref: '#/definitions/common.Result'
      security:
        - JWTAuth: [ ]
      tags:
        - Category
  /admin/category/list:
    get:
      parameters:
        - description: 查询信息
          in: query
          name: type
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/common.Result'
      security:
        - JWTAuth: [ ]
      tags:
        - Category
  /admin/category/page:
    get:
      parameters:
        - description: 分类类型：1为菜品分类，2为套餐分类
          in: query
          name: type
          type: integer
        - description: 分页查询的name
          in: query
          name: name
          type: string
        - description: 分页查询的页数
          in: query
          name: page
          type: integer
        - description: 分页查询的页容量
          in: query
          name: pageSize
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/common.Result'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/common.Result'
        "500":
          description: PageQuery failed
          schema:
            $ref: '#/definitions/common.Result'
      security:
        - JWTAuth: [ ]
      tags:
        - Category
  /admin/category/status/{status}:
    post:
      parameters:
        - description: 分类id
          in: query
          name: id
          required: true
          type: string
        - description: 状态
          in: path
          name: status
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/common.Result'
        "500":
          description: SetStatus failed
          schema:
            $ref: '#/definitions/common.Result'
      security:
        - JWTAuth: [ ]
      tags:
        - Category
  /admin/employee:
    put:
      parameters:
        - description: 信息
          in: body
          name: employee
          required: true
          schema:
            $ref: '#/definitions/request.EmployeeDTO'
      produces:
        - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/common.Result'
        "400":
          description: fail
          schema:
            $ref: '#/definitions/common.Result'
        "500":
          description: fail
          schema:
            $ref: '#/definitions/common.Result'
      security:
        - JWTAuth: [ ]
      tags:
        - Employee
  /admin/employee/:
    post:
      parameters:
        - description: 新增员工信息
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/request.EmployeeDTO'
      produces:
        - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/common.Result'
        "500":
          description: Dupliciated Username
          schema:
            $ref: '#/definitions/common.Result'
      security:
        - JWTAuth: [ ]
      tags:
        - Employee
  /admin/employee/{id}:
    get:
      parameters:
        - description: 员工id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/common.Result'
        "400":
          description: fail
          schema:
            $ref: '#/definitions/common.Result'
      security:
        - JWTAuth: [ ]
      tags:
        - Employee
  /admin/employee/editPassword:
    put:
      parameters:
        - description: id和新旧密码
          in: body
          name: employee
          required: true
          schema:
            $ref: '#/definitions/request.EmployeeEditPassword'
      produces:
        - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/common.Result'
        "400":
          description: fail
          schema:
            $ref: '#/definitions/common.Result'
        "406":
          description: fail
          schema:
            $ref: '#/definitions/common.Result'
      security:
        - JWTAuth: [ ]
      tags:
        - Employee
  /admin/employee/login:
    post:
      parameters:
        - description: 员工登录信息
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/request.EmployeeLogin'
      produces:
        - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
              - $ref: '#/definitions/common.Result'
              - properties:
                  data:
                    $ref: '#/definitions/response.EmployeeLogin'
                type: object
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/common.Result'
        "401":
          description: wrong password or error on json web token generate
          schema:
            $ref: '#/definitions/common.Result'
      tags:
        - Employee
  /admin/employee/logout:
    post:
      produces:
        - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/common.Result'
      security:
        - JWTAuth: [ ]
      tags:
        - Employee
  /admin/employee/page/:
    get:
      parameters:
        - description: 分页查询的name
          in: query
          name: name
          type: string
        - description: 分页查询的页数
          in: query
          name: page
          type: integer
        - description: 分页查询的页容量
          in: query
          name: pageSize
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
              - $ref: '#/definitions/common.Result'
              - properties:
                  data:
                    $ref: '#/definitions/common.PageResult'
                type: object
        "501":
          description: fail
          schema:
            $ref: '#/definitions/common.Result'
      security:
        - JWTAuth: [ ]
      tags:
        - Employee
  /admin/employee/status/{status}:
    post:
      parameters:
        - description: 员工状态
          in: path
          name: status
          required: true
          type: string
        - description: 查询员工请求信息
          in: query
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/common.Result'
        "501":
          description: fail
          schema:
            $ref: '#/definitions/common.Result'
      security:
        - JWTAuth: [ ]
      tags:
        - Employee
securityDefinitions:
  JWTAuth:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
